# User is root but capabilites should be dropped with docker/capsh
user  root;
worker_processes  1;

load_module modules/ngx_http_dav_ext_module.so;
load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

thread_pool workspace_pool threads=16;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    # Add lua modules in scripts to the default lua search path (the `;;`)
    lua_package_path "/etc/nginx/scripts/?.lua;;";

    server {
        underscores_in_headers on;
        # Should be SSL terminated
        listen      80;
        listen [::]:80;

        access_log                /dev/stdout;
        error_log                 /dev/stderr info;
        
        # Set the maximum size of uploads
        client_max_body_size 500m;
        client_body_timeout 600s; # Default is 60, May need to be increased for very large uploads

        # other configs
        location /workspace/datasets/ {
            aio threads=workspace_pool;
            autoindex              on;
            alias                  /lsst/datasets/;
            client_body_temp_path  /cache/client_temp;

            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_ext_methods PROPFIND OPTIONS;

            create_full_put_path   on;
            # dav_access             group:rw  all:r;

            # An init_by_lua_block could setsfsuid(65534) or something
            # So that access_by_lua_block is never setfsuid(0)
            # Per-Request Impersionation
            access_by_lua_block {
                local uid = ngx.req.get_headers()['x_auth_request_uid']
                local davt = require("davt")
                davt.setfsuid(uid)
            }
        }

        # other configs
        # location /workspace/jhome/ {
        #     aio threads=workspace_pool;
        #     autoindex              on;
        #     alias                  /lsst/project/jhome/;
        #     client_body_temp_path  /cache/client_temp;

        #     dav_methods PUT DELETE MKCOL COPY MOVE;
        #     dav_ext_methods PROPFIND OPTIONS;

        #     create_full_put_path   on;
        #     # dav_access             group:rw  all:r;

        #     # An init_by_lua_block could setsfsuid(65534) or something
        #     # So that access_by_lua_block is never setfsuid(0)
        #     # Per-Request Impersionation
        #     access_by_lua_block {
        #         local username = ngx.req.get_headers()['remote_user']
        #         local davt = require("davt")
        #         davt.impersonate(username, nil)
        #     }
        # }
    }
}
