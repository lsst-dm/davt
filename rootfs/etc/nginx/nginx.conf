# User is root but capabilites should be dropped with docker/capsh
user  root;
worker_processes  1;

include modules/all.conf;

thread_pool workspace_pool threads=16;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    lua_load_resty_core off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    # tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    # Add lua modules in scripts to the default lua search path (the `;;`)
    lua_package_path "/etc/nginx/scripts/?.lua;;";

    lua_shared_dict davt 1m;

    init_by_lua_block {
        local lua_davt = require("davt")
        local davt = ngx.shared.davt
        lua_davt:new(davt)
    }

    server {
        underscores_in_headers on;
        # Should be SSL terminated
        listen      80;
        listen [::]:80;

        access_log                /dev/stdout;
        error_log                 /dev/stderr info;
        
        # Set the maximum size of uploads
        client_max_body_size 500m;
        client_body_timeout 600s; # Default is 60, May need to be increased for very large uploads

        # other configs
        location /davt/ {
            aio threads=workspace_pool;
            autoindex              on;
            alias                  /var/www/webdav/;
            client_body_temp_path  /tmp/nginx;

            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_ext_methods PROPFIND OPTIONS;

            create_full_put_path   on;
            dav_access             group:rw  all:r;

            # An init_by_lua_block could setsfsuid(65534) or something
            # So that access_by_lua_block is never setfsuid(0)
            # Per-Request Impersionation
            access_by_lua_block {
                local davt = ngx.shared.davt
                local uid = ngx.req.get_headers()['x-auth-request-uid']
                if uid ~= nil then
                    ngx.log(ngx.NOTICE, "Found UID " .. uid)
                    davt:setfsuid(uid)
                else
                   ngx.log(ngx.CRIT, "No UID found")
                   ngx.exit(ngx.HTTP_FORBIDDEN)
                end
            }
        }
    }
}
